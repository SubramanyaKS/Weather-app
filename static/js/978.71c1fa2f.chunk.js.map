{"version":3,"file":"static/js/978.71c1fa2f.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","components/WeatherMiniCard.js","util/converter.js","components/WeatherCard.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useContext } from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport '../assets/main.css'\r\nimport { WeatherDataContext } from '../context/weatherDataContext';\r\n\r\nconst MiniCard = ({icon,text,cdata,unit}) => {\r\n  const {state} = useContext(WeatherDataContext);\r\n  return (\r\n    <Card className={state.dark?\"card-dark\":\"card-light\"} style={{ width: \"60%\" ,backgroundColor:\"transparent\"}}>\r\n        <Card.Text>\r\n          <FontAwesomeIcon icon={icon} fade /> <b>{text} </b>{\" \"}\r\n        </Card.Text>\r\n        <Card.Text><b>{cdata} {unit}</b></Card.Text>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MiniCard;","export const farenheittoCelcius=(temp)=>{\r\n    return (5/9)*Number(temp-32);\r\n}\r\nexport const celciusToFarenheit = (temp)=>{\r\n    return ((9/5)*Number(temp)+32).toFixed(2);\r\n}","import React, { useContext, useEffect } from \"react\";\r\nimport { Card} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../assets/main.css\";\r\nimport {\r\n  faLocation,\r\n  faTemperature0,\r\n  faTemperature2,\r\n  faTemperatureHigh,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faRotateRight, faC, faF } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faWind } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGaugeSimpleMed } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faDroplet } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport MiniCard from \"./WeatherMiniCard\";\r\nimport { useState } from \"react\";\r\nimport { celciusToFarenheit } from \"../util/converter\";\r\nimport { WeatherDataContext } from \"../context/weatherDataContext\";\r\nimport \"../assets/card.css\";\r\nimport defaultImg from '../assets/img/default.jpg';\r\nimport clearImg from '../assets/img/clear.jpg';\r\nimport snowImg from '../assets/img/snow.jpg';\r\nimport rainImg from '../assets/img/rain.jpg';\r\nimport cloudImg from '../assets/img/cloud.jpg';\r\nimport smokeImg from '../assets/img/smoke.jpg';\r\nimport fogImg from '../assets/img/fog.jpg';\r\nimport {ToggleSwitch} from 'reactjs-toggleswitch';\r\n\r\nconst WeatherCard = ({ data }) => {\r\n  const { state } = useContext(WeatherDataContext);\r\n  const [farenheit, setFarenheit] = useState(false);\r\n  const [background, setBackground] = useState(defaultImg);\r\n\r\n  useEffect(() => {\r\n    if (data.weather) {\r\n      updateBackground();\r\n    }\r\n  }, [data]);\r\n\r\n  const updateBackground = () => {\r\n    const weatherCondition = data.weather[0].main;\r\n\r\n    // Define background images for different weather conditions\r\n    const backgrounds = {\r\n      Clear: clearImg,\r\n      Rain: rainImg,\r\n      Snow: snowImg,\r\n      Clouds: cloudImg,\r\n      Fog:fogImg,\r\n      Smoke:smokeImg,\r\n      Haze:smokeImg,\r\n      Mist:fogImg,\r\n      Thunderstorm: \"thunderstorm.jpg\",\r\n      // Add more as needed\r\n    };\r\n\r\n    // Set the background based on the weather condition\r\n    setBackground(backgrounds[weatherCondition] || defaultImg);\r\n  };\r\n\r\n  const refresh = () => {\r\n    window.location.reload();\r\n  };\r\n  const convertTemp = () => {\r\n    if (farenheit) {\r\n      setFarenheit(false);\r\n    } else {\r\n      setFarenheit(true);\r\n    }\r\n  };\r\n  return (\r\n    <Card\r\n      className={state.dark ? \"card-dark\" : \"card-light\"}\r\n      style={{ width: \"80%\",backgroundImage: `url(${background})` }}\r\n    >\r\n      <div className=\"container-card\">\r\n        <div className=\"column\">\r\n          <div className=\"image-card\">\r\n            <img\r\n              src={`https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}\r\n              alt=\"Images\"\r\n            />\r\n          </div>\r\n          {/* <p>{data.weather[0].main}</p> */}\r\n          <h3 className={state.dark?\"styled-text-dark\":\"styled-text-light\"}>{data.weather[0].description}</h3>\r\n          <h1 className={state.dark?\"styled-text-dark\":\"styled-text-light\"}>\r\n            {farenheit ? celciusToFarenheit(data.main.temp) : data.main.temp}\r\n            {farenheit ? \"°F\" : \"°C\"}\r\n          </h1>\r\n          <h6 className={state.dark?\"styled-text-dark\":\"styled-text-light\"}>\r\n            <b>\r\n              {data.name},{data.sys.country}\r\n            </b>\r\n          </h6>\r\n          <ToggleSwitch checked={farenheit ? true : false} thumbOnColor=\"#fff\"\r\n            thumbOffColor=\"#000\"\r\n            offColor=\"#fff\"\r\n            onColor=\"#000\"\r\n            onToggle={() => convertTemp()}><FontAwesomeIcon\r\n            style={{ color:farenheit?\"#000\":\"#fff\" }}\r\n            icon={farenheit?faC:faF}\r\n            \r\n          /></ToggleSwitch>\r\n        </div>\r\n\r\n        <div className=\"column second\">\r\n          <div className=\"column-c\">\r\n            <MiniCard\r\n            style={{backgroundImage: `url(${background})`}}\r\n              icon={faTemperatureHigh}\r\n              text=\"Maximum: \"\r\n              cdata={\r\n                farenheit\r\n                  ? celciusToFarenheit(data.main.temp_max)\r\n                  : data.main.temp_max\r\n              }\r\n              unit={farenheit ? \"°F\" : \"°C\"}\r\n            />\r\n            <MiniCard\r\n              icon={faLocation}\r\n              text=\"Latitude: \"\r\n              cdata={data.coord.lat}\r\n            />\r\n            <MiniCard\r\n              icon={faGaugeSimpleMed}\r\n              text=\"Pressure: \"\r\n              cdata={data.main.pressure}\r\n              unit=\"Pa\"\r\n            />\r\n            <MiniCard\r\n              icon={faWind}\r\n              text=\"Wind Speed: \"\r\n              cdata={data.wind.speed}\r\n              unit=\"km/hr\"\r\n            />\r\n          </div>\r\n          <div className=\"column-c\">\r\n            <MiniCard\r\n              icon={faTemperature0}\r\n              text=\"Minimum: \"\r\n              cdata={\r\n                farenheit\r\n                  ? celciusToFarenheit(data.main.temp_min)\r\n                  : data.main.temp_min\r\n              }\r\n              unit={farenheit ? \"°F\" : \"°C\"}\r\n            />\r\n            <MiniCard\r\n              icon={faLocation}\r\n              text=\"Longitude: \"\r\n              cdata={data.coord.lon}\r\n            />\r\n            <MiniCard\r\n              icon={faTemperature2}\r\n              text=\"Feels Like: \"\r\n              cdata={\r\n                farenheit\r\n                  ? celciusToFarenheit(data.main.feels_like)\r\n                  : data.main.feels_like\r\n              }\r\n              unit={farenheit ? \"°F\" : \"°C\"}\r\n            />\r\n            <MiniCard\r\n              icon={faDroplet}\r\n              text=\"Humidity: \"\r\n              cdata={data.main.humidity}\r\n              unit=\"%\"\r\n            />\r\n          </div>\r\n          <button\r\n            className={\r\n              state.dark ? \"button button-dark\" : \"button button-light\"\r\n            }\r\n            onClick={refresh}\r\n          >\r\n            <FontAwesomeIcon icon={faRotateRight} spin />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n"],"names":["CardImg","React","ref","bsPrefix","className","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","icon","cdata","unit","state","useContext","WeatherDataContext","dark","style","width","backgroundColor","fade","celciusToFarenheit","temp","Number","toFixed","data","useState","farenheit","setFarenheit","defaultImg","background","setBackground","useEffect","weather","updateBackground","weatherCondition","main","Clear","Rain","Snow","Clouds","Fog","fogImg","Smoke","smokeImg","Haze","Mist","Thunderstorm","backgroundImage","src","alt","description","name","sys","country","checked","thumbOnColor","thumbOffColor","offColor","onColor","onToggle","color","faC","faF","faTemperatureHigh","temp_max","faLocation","coord","lat","faGaugeSimpleMed","pressure","faWind","wind","speed","faTemperature0","temp_min","lon","faTemperature2","feels_like","faDroplet","humidity","onClick","window","location","reload","faRotateRight","spin"],"sourceRoot":""}